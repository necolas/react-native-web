// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`components/Slider trackTintColor maximumTrackTintColor 1`] = `
<View
  onLayout={[Function]}
  step={0}
  style={
    Array [
      33,
      undefined,
    ]
  }
  value={0}
>
  <View
    onLayout={[Function]}
    style={
      Array [
        Object {
          "backgroundColor": "#F45D22",
        },
        34,
      ]
    }
  />
  <AnimatedComponent
    style={
      Array [
        34,
        Object {
          "backgroundColor": "#009688",
          "opacity": 0,
          "position": "absolute",
          "width": AnimatedAddition {
            "_a": AnimatedInterpolation {
              "_children": Array [],
              "_interpolation": [Function],
              "_listeners": Object {},
              "_parent": AnimatedValue {
                "_animation": null,
                "_children": Array [],
                "_listeners": Object {},
                "_offset": 0,
                "_value": 0,
              },
            },
            "_b": AnimatedValue {
              "_animation": null,
              "_children": Array [],
              "_listeners": Object {},
              "_offset": 0,
              "_value": 0,
            },
            "_children": Array [],
            "_listeners": Object {},
          },
        },
      ]
    }
  />
  <AnimatedComponent
    onLayout={[Function]}
    style={
      Array [
        Object {
          "backgroundColor": "#009688",
        },
        35,
        Object {
          "opacity": 0,
          "transform": Array [
            Object {
              "translateX": AnimatedInterpolation {
                "_children": Array [],
                "_interpolation": [Function],
                "_listeners": Object {},
                "_parent": AnimatedValue {
                  "_animation": null,
                  "_children": Array [],
                  "_listeners": Object {},
                  "_offset": 0,
                  "_value": 0,
                },
              },
            },
            Object {
              "translateY": 0,
            },
          ],
        },
      ]
    }
  />
  <View
    onMoveShouldSetResponder={[Function]}
    onMoveShouldSetResponderCapture={[Function]}
    onResponderEnd={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderReject={[Function]}
    onResponderRelease={[Function]}
    onResponderStart={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    onStartShouldSetResponderCapture={[Function]}
    style={
      Array [
        36,
        Object {},
      ]
    }
  />
</View>
`;

exports[`components/Slider trackTintColor minimumTrackTintColor 1`] = `
<View
  onLayout={[Function]}
  step={0}
  style={
    Array [
      33,
      undefined,
    ]
  }
  value={0}
>
  <View
    onLayout={[Function]}
    style={
      Array [
        Object {
          "backgroundColor": "#794BC4",
        },
        34,
      ]
    }
  />
  <AnimatedComponent
    style={
      Array [
        34,
        Object {
          "backgroundColor": "#009688",
          "opacity": 0,
          "position": "absolute",
          "width": AnimatedAddition {
            "_a": AnimatedInterpolation {
              "_children": Array [],
              "_interpolation": [Function],
              "_listeners": Object {},
              "_parent": AnimatedValue {
                "_animation": null,
                "_children": Array [],
                "_listeners": Object {},
                "_offset": 0,
                "_value": 0,
              },
            },
            "_b": AnimatedValue {
              "_animation": null,
              "_children": Array [],
              "_listeners": Object {},
              "_offset": 0,
              "_value": 0,
            },
            "_children": Array [],
            "_listeners": Object {},
          },
        },
      ]
    }
  />
  <AnimatedComponent
    onLayout={[Function]}
    style={
      Array [
        Object {
          "backgroundColor": "#009688",
        },
        35,
        Object {
          "opacity": 0,
          "transform": Array [
            Object {
              "translateX": AnimatedInterpolation {
                "_children": Array [],
                "_interpolation": [Function],
                "_listeners": Object {},
                "_parent": AnimatedValue {
                  "_animation": null,
                  "_children": Array [],
                  "_listeners": Object {},
                  "_offset": 0,
                  "_value": 0,
                },
              },
            },
            Object {
              "translateY": 0,
            },
          ],
        },
      ]
    }
  />
  <View
    onMoveShouldSetResponder={[Function]}
    onMoveShouldSetResponderCapture={[Function]}
    onResponderEnd={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderReject={[Function]}
    onResponderRelease={[Function]}
    onResponderStart={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    onStartShouldSetResponderCapture={[Function]}
    style={
      Array [
        36,
        Object {},
      ]
    }
  />
</View>
`;

exports[`components/Slider step maximumValue: "10", step: "2", value: "4" 1`] = `
<View
  onLayout={[Function]}
  step={2}
  style={
    Array [
      33,
      undefined,
    ]
  }
  value={4}
>
  <View
    onLayout={[Function]}
    style={
      Array [
        Object {
          "backgroundColor": "#939393",
        },
        34,
      ]
    }
  />
  <AnimatedComponent
    style={
      Array [
        34,
        Object {
          "backgroundColor": "#009688",
          "opacity": 0,
          "position": "absolute",
          "width": AnimatedAddition {
            "_a": AnimatedInterpolation {
              "_children": Array [],
              "_interpolation": [Function],
              "_listeners": Object {},
              "_parent": AnimatedValue {
                "_animation": null,
                "_children": Array [],
                "_listeners": Object {},
                "_offset": 0,
                "_value": 4,
              },
            },
            "_b": AnimatedValue {
              "_animation": null,
              "_children": Array [],
              "_listeners": Object {},
              "_offset": 0,
              "_value": 0,
            },
            "_children": Array [],
            "_listeners": Object {},
          },
        },
      ]
    }
  />
  <AnimatedComponent
    onLayout={[Function]}
    style={
      Array [
        Object {
          "backgroundColor": "#009688",
        },
        35,
        Object {
          "opacity": 0,
          "transform": Array [
            Object {
              "translateX": AnimatedInterpolation {
                "_children": Array [],
                "_interpolation": [Function],
                "_listeners": Object {},
                "_parent": AnimatedValue {
                  "_animation": null,
                  "_children": Array [],
                  "_listeners": Object {},
                  "_offset": 0,
                  "_value": 4,
                },
              },
            },
            Object {
              "translateY": 0,
            },
          ],
        },
      ]
    }
  />
  <View
    onMoveShouldSetResponder={[Function]}
    onMoveShouldSetResponderCapture={[Function]}
    onResponderEnd={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderReject={[Function]}
    onResponderRelease={[Function]}
    onResponderStart={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    onStartShouldSetResponderCapture={[Function]}
    style={
      Array [
        36,
        Object {},
      ]
    }
  />
</View>
`;
